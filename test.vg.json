{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "title": {"text": "placeholder"},
    "width": 0,
    "height": 0,
    "padding": 400,
    "autosize": "none",
    "background": "lightblue",
  
    "signals": [
      {"name": "radius", "value": "180"},
      {"name": "radiusRange", "value": [0,180]},
      {
        "name": "clear", "value": true,
        "on": [
          {
            "events": "mouseup[!event.item]",
            "update": "true",
            "force": true
          }
        ]
      },
      {
        "name": "shift", "value": false,
        "on": [
          {
            "events": "@legendSymbol:click, @legendLabel:click",
            "update": "event.shiftKey",
            "force":  true
          }
        ]
      },
      {
        "name": "clicked", "value": null,
        "on": [
          {
            "events": "@legendSymbol:click, @legendLabel:click",
            "update": "{value: datum.value}",
            "force":  true
          }
        ]
      },
      {
        "name": "brush", "value": 0,
        "on": [
          {
            "events": {"signal": "clear"},
            "update": "clear ? [0, 0] : brush"
          },
          {
            "events": "@xaxis:mousedown",
            "update": "[x(), x()]"
          },
          {
            "events": "[@xaxis:mousedown, window:mouseup] > window:mousemove!",
            "update": "[brush[0], clamp(x(), 0, width)]"
          },
          {
            "events": {"signal": "delta"},
            "update": "clampRange([anchor[0] + delta, anchor[1] + delta], 0, width)"
          }
        ]
      },
      {
        "name": "anchor", "value": null,
        "on": [{"events": "@brush:mousedown", "update": "slice(brush)"}]
      },
      {
        "name": "xdown", "value": 0,
        "on": [{"events": "@brush:mousedown", "update": "x()"}]
      },
      {
        "name": "delta", "value": 0,
        "on": [
          {
            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!",
            "update": "x() - xdown"
          }
        ]
      },
      {
        "name": "domain",
        "on": [
          {
            "events": {"signal": "brush"},
            "update": "span(brush) ? invert('x', brush) : null"
          }
        ]
      }
    ],
  
    "data": [
      {
        "name": "coffee",
        "url": "https://raw.githubusercontent.com/andrewooi924/andrewooi924.github.io/main/data/df_arabica_clean.csv",
        "format": {
          "type": "csv",
          "parse": {
            "Aroma": "number",
            "Acidity": "number",
            "Aftertaste": "number",
            "Body": "number",
            "Balance": "number"
          }
        },
        "transform": [{
            "type": "aggregate",
            "groupby": ["Variety"],
            "fields": [
                "Aroma",
                "Acidity",
                "Aftertaste",
                "Balance",
                "Body"
            ],
            "ops": ["average", "average", "average", "average", "average"]
        },
        {
            "type": "joinaggregate", "fields": ["Variety"], "ops": ["count"], "as": ["Count"]
        },
        {
            "type":"filter", "expr": "(datum.Variety != '') && (datum.Variety != 'unknown') && (datum.Count >= 3)"
        }]},
        {
            "name": "selected",
            "on": [
              {"trigger": "clear", "remove": true},
              {"trigger": "!shift", "remove": true},
              {"trigger": "!shift && clicked", "insert": "clicked"},
              {"trigger": "shift && clicked", "toggle": "clicked"}
            ]
          },
        {
          "name": "folded",
          "source": "coffee",
          "transform": [{
            "type": "fold",
            "fields": [
              "average_Aroma",
              "average_Acidity",
              "average_Aftertaste",
              "average_Balance",
              "average_Body"
            ]
          }]
        },
        {
          "name": "fields",
          "source": "folded",
          "transform": [
            {
              "type": "aggregate",
              "groupby": ["key"],
              "fields": ["value", "value"],
              "ops": ["min", "max"]
            }
          ]
        }],
        "scales": [{
          "name": "angle",
          "type": "point",
          "range": {"signal": "[-PI, PI]"},
          "padding": 0.5,
          "domain": {"data": "fields", "field": "key"}
        },
        {
          "name": "color",
          "type": "ordinal",
          "domain": {"data": "coffee", "field": "Variety"},
          "range": {"scheme": "yelloworangebrown"}
        },
        {
            "name": "average_Aroma",
            "type": "linear",
            "range": {"signal": "radiusRange"},
            "domain": {"data": "coffee", "field": "average_Aroma"}
        },
        {
            "name": "average_Acidity",
            "type": "linear",
            "range": {"signal": "radiusRange"},
            "domain": {"data": "coffee", "field": "average_Acidity"}
        },
        {
            "name": "average_Aftertaste",
            "type": "linear",
            "range": {"signal": "radiusRange"},
            "domain": {"data": "coffee", "field": "average_Aftertaste"}
        },
        {
            "name": "average_Body",
            "type": "linear",
            "range": {"signal": "radiusRange"},
            "domain": {"data": "coffee", "field": "average_Body"}
        },
        {
            "name": "average_Balance",
            "type": "linear",
            "range": {"signal": "radiusRange"},
            "domain": {"data": "coffee", "field": "average_Balance"}
        }],
        "legends": [{
            "stroke": "color",
            "title": "Varieties",
            "encode": {
              "symbols": {
                "name": "legendSymbol",
                "interactive": true,
                "update": {
                  "fill": {"value": "transparent"},
                  "strokeWidth": {"value": 2},
                  "opacity": [
                    {"test": "!length(data('selected')) || indata('selected', 'value', datum.value)", "value": 0.7},
                    {"value": 0.15}
                  ],
                  "size": {"value": 64}
                }
              },
              "labels": {
                "name": "legendLabel",
                "interactive": true,
                "update": {
                  "opacity": [
                    {"test": "!length(data('selected')) || indata('selected', 'value', datum.value)", "value": 1},
                    {"value": 0.25}
                  ]
                }
              }
            }
          }],
        "marks": [
          {
            "type": "group",
            "from": {
              "facet": {
                "data": "folded",
                "name": "facet",
                "groupby": "Variety"
              }
            },
            "marks": [
              {
                "name": "grid",
                "from": {"data": "fields"},
                "type": "rule",
                "encode": {
                  "update": {
                    "x": {
                      "signal": "1 * radius * cos(scale('angle', datum.key))"
                    },
                    "y": {
                      "signal": "1 * radius * sin(scale('angle', datum.key))"
                    },
                    "x2": {"value": 0},
                    "y2": {"value": 0},
                    "stroke": {"value": "gray"}
                  }
                }
              },
              {
                "name": "label",
                "from": {"data": "fields"},
                "type": "text",
                "encode": {
                  "update": {
                    "x": {
                      "signal": "1.2 * radius * cos(scale('angle', datum.key))"
                    },
                    "y": {
                      "signal": "1.2 * radius * sin(scale('angle', datum.key))"
                    },
                    "baseline": {"value": "bottom"},
                    "text": {"field": "key"},
                    "align": {"value": "center"}
                  }
                }
              },
              {
                "name": "scale",
                "from": {"data": "fields"},
                "type": "text",
                "encode": {
                  "update": {
                    "x": {
                      "signal": "1.2 * radius * cos(scale('angle', datum.key))"
                    },
                    "y": {
                      "signal": "1.2 * radius * sin(scale('angle', datum.key))"
                    },
                    "baseline": {"value": "top"},
                    "text": {"signal": "'max of ' + format(datum.max_value, '.2f')"},
                    "align": {"value": "center"},
                    "fill": {"value": "gray"}
                  }
                }
              },
              {
                "type": "line",
                "interactive":false,
                "from": {"data": "facet"},
                "encode": {
                  "enter": {
                    "x": {
                      "signal": "scale(datum.key, datum.value) * cos(scale('angle', datum.key))"
                    },
                    "y": {
                      "signal": "scale(datum.key, datum.value) * sin(scale('angle', datum.key))"
                    },
                    "strokeWidth": {"value": 2},
                    "interpolate": {"value": "linear-closed"},
                    "tooltip": {"signal": "datum"},
                    "opacity": [
                        {"test": "(!domain || inrange(datum.average_Aroma, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.average_Aroma))", "value": 0.7 },
                        {"value": 0.15}
                      ],
                      "stroke": [
                        {"test": "(!domain || inrange(datum.average_Aroma, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.average_Aroma))", "scale": "color", "field": "Variety"},
                        {"value": "#ccc"}
                      ],
                      "fill": [
                        {"test": "(!domain || inrange(datum.average_Aroma, domain)) && (!length(data('selected')) || indata('selected', 'value', datum.average_Aroma))", "scale": "color", "field": "Variety"},
                        {"value": "#ccc"}
                      ]
                  }
                }
              }
            ]
          }
        ]
}